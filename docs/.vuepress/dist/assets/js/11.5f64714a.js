(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{508:function(t,a,s){t.exports=s.p+"assets/img/date.561d850d.png"},523:function(t,a,s){"use strict";s.r(a);var e=s(6),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h3",{attrs:{id:"date"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#date"}},[t._v("#")]),t._v(" Date")]),t._v(" "),e("p",[t._v("创建日期对象，使用new操作符调用Date构造函数：\nlet now  = new Date()")]),t._v(" "),e("p",[t._v("Date类型的方法\n"),e("img",{attrs:{src:s(508),alt:"avatar"}})]),t._v(" "),e("h3",{attrs:{id:"regexp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#regexp"}},[t._v("#")]),t._v(" RegExp")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" expression "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("pattern"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("flags\n")])])]),e("p",[t._v("这个正则表达式的pattern（模式）可以是任何简单或复杂的正则表达式。")]),t._v(" "),e("p",[t._v("正则的匹配模式的标记")]),t._v(" "),e("ul",[e("li",[t._v("g：全局模式，表示查找字符串的全部内容，而不是找到第一个匹配的内容就结束")]),t._v(" "),e("li",[t._v("i：不区分大小写，表示查找匹配时忽略pattern和字符串的大小写")]),t._v(" "),e("li",[t._v("m：多行模式，表示找到一行文本末尾时会继续查找")]),t._v(" "),e("li",[t._v("y: 粘附模式，表示只查找从lastIndex开始及之后的字符串")])]),t._v(" "),e("p",[t._v("检测正则表达式是否匹配的方法 test()，如果输入的文本与模式匹配，则参数返回true")]),t._v(" "),e("div",{staticClass:"language-javascript extra-class"},[e("pre",{pre:!0,attrs:{class:"language-javascript"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" text "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" pattern "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token regex"}},[e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-source language-regex"}},[t._v("H")]),e("span",{pre:!0,attrs:{class:"token regex-delimiter"}},[t._v("/")]),e("span",{pre:!0,attrs:{class:"token regex-flags"}},[t._v("i")])]),t._v("  \n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("pattern"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("text"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" \n   "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果text中有h或者H 则执行")]),t._v("\n   console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);